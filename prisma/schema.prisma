generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id           Int      @id @default(autoincrement())
  username          String
  email             String
  password          String
  registration_date DateTime
  // Add other user-specific attributes here
}

model Artwork {
  artwork_id    Int      @id @default(autoincrement())
  title         String
  creation_date DateTime
  length        String?
  width         String?
  height        String?
  duration      String?
  weight        String?
  medium        String
  edition       Boolean
  description   String
  image_url     String
  location      String

  // Fields
  artist_id  Int
  gallery_id Int?
  status_id  Int

  // Relationships
  artist                  Artist               @relation(name: "ArtworkToArtist", fields: [artist_id], references: [artist_id])
  categories              Category[]           @relation(name: "Artwork_Category")
  owners                  Owner?               @relation(name: "Artwork_Owner", fields: [ownerOwner_id], references: [owner_id])
  exhibitions             Exhibition?          @relation(name: "Artwork_Exhibition", fields: [exhibitionExhibition_id], references: [exhibition_id])
  tags                    Tag[]                @relation(name: "Artwork_Tag")
  gallery                 Gallery?             @relation(name: "Artwork_Gallery", fields: [gallery_id], references: [gallery_id])
  status                  Status?              @relation(name: "Artwork_Status", fields: [status_id], references: [status_id])
  Artwork_Exhibition      Artwork_Exhibition[]
  Artwork_Gallery         Artwork_Gallery[]
  Artwork_Owner           Artwork_Owner[]
  Artwork_Status          Artwork_Status[]
  Artwork_Tag             Artwork_Tag[]
  ownerOwner_id           Int?
  exhibitionExhibition_id Int?
}

model Artist {
  artist_id   Int      @id @default(autoincrement())
  name        String
  birth_date  DateTime
  death_date  DateTime?
  biography   String

  // Relationships
  artworks Artwork[] @relation("ArtworkToArtist")
}

model Category {
  category_id Int     @id @default(autoincrement())
  name        String
  description String?

  // Relationships
  artworks Artwork[] @relation("Artwork_Category")
}

model Exhibition {
  exhibition_id Int      @id @default(autoincrement())
  name          String
  start_date    DateTime
  end_date      DateTime
  location      String
  description   String

  // Relationships
  artworks           Artwork[]            @relation("Artwork_Exhibition")
  galleries          Gallery[]            @relation("Gallery_Exhibition")
  Artwork_Exhibition Artwork_Exhibition[]
}

model Artwork_Exhibition {
  @@id([artwork_id, exhibition_id])
  artwork_id    Int
  exhibition_id Int

  // Relationships
  artwork    Artwork    @relation(fields: [artwork_id], references: [artwork_id])
  exhibition Exhibition @relation(fields: [exhibition_id], references: [exhibition_id])

}

model Gallery {
  gallery_id   Int    @id @default(autoincrement())
  name         String
  location     String
  contact_info String
  website      String

  // Relationships
  exhibitions     Exhibition[]      @relation("Gallery_Exhibition")
  artworks        Artwork[]         @relation("Artwork_Gallery")
  Artwork_Gallery Artwork_Gallery[]
}

model Artwork_Gallery {
  @@id([artwork_id, gallery_id])
  artwork_id Int
  gallery_id Int

  // Relationships
  artwork Artwork @relation(fields: [artwork_id], references: [artwork_id])
  gallery Gallery @relation(fields: [gallery_id], references: [gallery_id])
}

model Gallery_Exhibition {
  @@id([gallery_id, exhibition_id])
  gallery_id    Int
  exhibition_id Int
}

model Owner {
  owner_id     Int    @id @default(autoincrement())
  name         String
  contact_info String

  // Relationships
  artworks      Artwork[]       @relation("Artwork_Owner")
  Artwork_Owner Artwork_Owner[]
}

model Artwork_Owner {
  artwork_id       Int
  owner_id         Int
  ownership_type   String
  acquisition_date DateTime?
  price            Float?

  // Relationships
  artwork Artwork @relation(fields: [artwork_id], references: [artwork_id])
  owner   Owner   @relation(fields: [owner_id], references: [owner_id])

  @@id([artwork_id, owner_id])
}

model Status {
  status_id   Int    @id @default(autoincrement())
  name        String
  description String

  // Relationships
  artworks       Artwork[]        @relation("Artwork_Status")
  Artwork_Status Artwork_Status[]
}

model Artwork_Status {
  status_id   Int
  artwork_id  Int
  change_date DateTime

  // Relationships
  artwork Artwork @relation(fields: [artwork_id], references: [artwork_id])
  status  Status  @relation(fields: [status_id], references: [status_id])

  @@id([artwork_id, status_id])
}

model Tag {
  tag_id      Int    @id @default(autoincrement())
  name        String
  description String
  // Add other tag-specific attributes here

  // Relationships
  artworks    Artwork[]     @relation("Artwork_Tag")
  Artwork_Tag Artwork_Tag[]
}

model Artwork_Tag {
  @@id([artwork_id, tag_id])
  artwork_id Int
  tag_id     Int

  // Relationships
  artwork Artwork @relation(fields: [artwork_id], references: [artwork_id])
  tag     Tag     @relation(fields: [tag_id], references: [tag_id])
}
